version: '{build}'

# Uncomment this to enable the fast build environment if your account does not
# support it automatically:
#os: Visual Studio 2015 RC

environment:
  global:
    PLATFORMTOOLSET: "v140"

  matrix:
    - BUILD_TYPE: "Debug"
      COMPILER: MSVC15
      PLATFORM: "Win32"
    - BUILD_TYPE: "Release"
      COMPILER: MSVC15
      PLATFORM: "Win32"
      WITH_PYTHON: yes
      PYTHON_VERSION: 27
    - BUILD_TYPE: "Debug"
      COMPILER: MSVC15
      PLATFORM: "x64"
    - BUILD_TYPE: "Release"
      COMPILER: MSVC15
      PLATFORM: "x64"
      WITH_PYTHON: yes
      PYTHON_VERSION: 27-x64
      PYTHON_INSTALL: yes
    - BUILD_TYPE: "Debug"
      COMPILER: MinGW
      WITH_PYTHON: yes
      PYTHON_VERSION: 27
    - BUILD_TYPE: "Release"
      COMPILER: MinGW
      WITH_PYTHON: yes
      PYTHON_VERSION: 34
    - BUILD_TYPE: "Release"
      COMPILER: MinGW-w64
      WITH_PYTHON: yes
      PYTHON_VERSION: 27-x64
    - BUILD_TYPE: "Debug"
      COMPILER: MinGW-w64
      WITH_PYTHON: yes
      PYTHON_VERSION: 27-x64

install:
- if [%COMPILER%]==[MSVC15] set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
- if [%COMPILER%]==[MSVC15] appveyor DownloadFile https://raw.githubusercontent.com/symengine/dependencies/fd912ad34c848e7a7a9dab4628f836ab167b9e59/mpir-2.7.0.zip
- if [%COMPILER%]==[MSVC15] 7z x mpir-2.7.0.zip > NUL
- if [%COMPILER%]==[MSVC15] msbuild mpir-2.7.0/build.vc14/lib_mpir_gc/lib_mpir_gc.vcxproj /p:Configuration=%BUILD_TYPE% /p:Platform=%PLATFORM% /p:PlatformToolset=%PLATFORMTOOLSET% /verbosity:minimal
- if [%COMPILER%]==[MSVC15] msbuild mpir-2.7.0/build.vc14/lib_mpir_cxx/lib_mpir_cxx.vcxproj /p:Configuration=%BUILD_TYPE% /p:Platform=%PLATFORM% /p:PlatformToolset=%PLATFORMTOOLSET% /verbosity:minimal
- if [%COMPILER%]==[MSVC15] copy mpir-2.7.0\build.vc14\lib_mpir_gc\%PLATFORM%\%BUILD_TYPE%\mpir.lib mpir-2.7.0\lib\%PLATFORM%\%BUILD_TYPE%\gmp.lib
- if [%COMPILER%]==[MSVC15] copy mpir-2.7.0\build.vc14\lib_mpir_cxx\%PLATFORM%\%BUILD_TYPE%\mpirxx.lib mpir-2.7.0\lib\%PLATFORM%\%BUILD_TYPE%\gmpxx.lib

- if [%COMPILER%]==[MinGW] set PATH=C:\MinGW\bin;%PATH%
- if [%COMPILER%]==[MinGW] mingw-get update
- if [%COMPILER%]==[MinGW] rename "C:\Program Files (x86)\Git\bin\sh.exe" "sh2.exe"
- if [%COMPILER%]==[MinGW] mingw-get install mingw32-gmp

- if [%COMPILER%]==[MinGW-w64] set PATH=C:\mingw64\bin;%PATH%
- if [%COMPILER%]==[MinGW-w64] rename "C:\Program Files (x86)\Git\bin\sh.exe" "sh2.exe"

- if [%COMPILER%]==[MinGW-w64] appveyor DownloadFile "https://raw.githubusercontent.com/symengine/dependencies/5cff7d1736877336cf9fb58267111beea4fa152f/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z" -FileName mw64.7z
- if [%COMPILER%]==[MinGW-w64] 7z x -oC:\ mw64.7z > NUL
- if [%COMPILER%]==[MinGW-w64] appveyor DownloadFile "https://raw.githubusercontent.com/symengine/dependencies/5cff7d1736877336cf9fb58267111beea4fa152f/gmp-6.0.0-x86_64-w64-mingw32.7z" -FileName gmp.7z
- if [%COMPILER%]==[MinGW-w64] 7z x -oC:\mingw64 gmp.7z > NUL

- if [%COMPILER%]==[MinGW-w64] if [%WITH_PYTHON%]==[yes] appveyor DownloadFile "https://raw.githubusercontent.com/symengine/dependencies/5cff7d1736877336cf9fb58267111beea4fa152f/python-x86_64-w64-mingw32.7z" -FileName pyx64.7z
- if [%COMPILER%]==[MinGW-w64] if [%WITH_PYTHON%]==[yes] 7z x -aoa -oC:\ pyx64.7z > NUL

- if [%WITH_PYTHON%]==[yes] set PATH=C:\Python%PYTHON_VERSION%;C:\Python%PYTHON_VERSION%\Scripts;%PATH%
- if [%WITH_PYTHON%]==[yes] pip install nose pytest sympy
- if [%WITH_PYTHON%]==[yes] pip install --install-option="--no-cython-compile" cython

build_script:
- mkdir build
- cd build

- if [%COMPILER%]==[MSVC15] if [%PYTHON_INSTALL%]==[yes] python ../setup.py install --define="GMP_DIR=mpir-2.7.0/lib/%PLATFORM%/%BUILD_TYPE%"
- if [%COMPILER%]==[MSVC15] if [%PYTHON_INSTALL%]==[yes] exit 0

- if [%COMPILER%]==[MSVC15] if [%PLATFORM%]==[Win32] cmake -G "Visual Studio 14 2015" -DGMP_DIR=mpir-2.7.0/lib/%PLATFORM%/%BUILD_TYPE% -DCMAKE_CXX_FLAGS_RELEASE="/MT /W1 /O2 /Ob2 /D NDEBUG" -DCMAKE_CXX_FLAGS_DEBUG="/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1 /W1" ..
- if [%COMPILER%]==[MSVC15] if [%PLATFORM%]==[x64] cmake -G "Visual Studio 14 2015 Win64" -DGMP_DIR=mpir-2.7.0/lib/%PLATFORM%/%BUILD_TYPE% -DCMAKE_CXX_FLAGS_RELEASE="/MT /W1 /O2 /Ob2 /D NDEBUG" -DCMAKE_CXX_FLAGS_DEBUG="/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1 /W1" ..

- if [%COMPILER%]==[MinGW] cmake -G "MinGW Makefiles" -DCOMMON_DIR=C:\MinGW -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..
- if [%COMPILER%]==[MinGW-w64] cmake -G "MinGW Makefiles" -DCOMMON_DIR=C:\mingw64 -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..

- if [%WITH_PYTHON%]==[yes] cmake -DWITH_PYTHON=yes ..

- cmake --build . --config %BUILD_TYPE% --target install

test_script:
- ctest --output-on-failure
- if [%WITH_PYTHON%]==[yes] cd symengine/python
- if [%WITH_PYTHON%]==[yes] if not [%COMPILER%]==[MSVC15] nosetests
- if [%WITH_PYTHON%]==[yes] mkdir empty && cd empty
- if [%WITH_PYTHON%]==[yes] python C:\projects\symengine\bin\test_python.py

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
#on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
